%YAML 1.2
---
name: Vue Component
scope: text.html.vue
version: 2

file_extensions:
  - vue
  - we
  - wpy

variables:
  space: '[ \t]'
  spaces: '[ \t]+'
  newline: '\n'
  tag_name: '[A-Za-z][A-Za-z0-9]*(?::[A-Za-z][A-Za-z0-9]*)?'
  attribute_name: '[a-zA-Z_:][a-zA-Z0-9_:.-]*'

contexts:
  main:
    - match: ''
      push:
        - include: comments
        - include: doctype
        - include: script-tag
        - include: style-tag
        - include: tags
        - include: entities

  # Comments
  comments:
    - match: <!--
      scope: punctuation.definition.comment.begin.html
      push: comment-content

  comment-content:
    - meta_scope: comment.block.html
    - match: '-->'
      scope: punctuation.definition.comment.end.html
      pop: true
    - match: '--'
      scope: invalid.illegal.bad-comments-or-CDATA.html
    - match: .
      scope: comment.block.html

  # DOCTYPE
  doctype:
    - match: '(?i)<!DOCTYPE'
      scope: punctuation.definition.tag.html
      push: doctype-content

  doctype-content:
    - meta_scope: meta.tag.sgml.doctype.html
    - match: '>'
      scope: punctuation.definition.tag.html
      pop: true
    - match: .
      scope: meta.tag.sgml.doctype.html

  # Script tag
  script-tag:
    - match: (<)(script)\b
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.script.html
      push: script-tag-head

  script-tag-head:
    - meta_scope: meta.tag.script.begin.html
    - match: setup\b
      scope: entity.other.attribute-name.html
    - match: lang\b
      scope: entity.other.attribute-name.html
    - match: '>'
      scope: punctuation.definition.tag.end.html
      set: script-content
    - match: /?>
      scope: punctuation.definition.tag.end.html
      pop: true
    - include: tag-attributes

  script-content:
    - match: (?=</script>)
      pop: true
    - match: (?=\S)
      push: js-source

  js-source:
    - meta_include_prototype: false
    - meta_scope: source.js
    - match: (?=</script>)
      pop: true
    - include: js-comments
    - include: js-strings
    - include: js-keywords
    - include: js-numbers
    - include: js-operators
    - include: js-functions

  js-comments:
    - match: //.*$
      scope: comment.line.double-slash.js
    - match: /\*
      push:
        - meta_scope: comment.block.js
        - match: \*/
          pop: true

  js-strings:
    - match: '"'
      push:
        - meta_scope: string.quoted.double.js
        - match: '"'
          pop: true
    - match: "'"
      push:
        - meta_scope: string.quoted.single.js
        - match: "'"
          pop: true

  js-keywords:
    - match: \b(if|else|for|while|do|break|continue|return|function|var|let|const|import|export|from|default|class|extends|new|this)\b
      scope: keyword.control.js

  js-numbers:
    - match: \b(-)?[0-9.]+\b
      scope: constant.numeric.js

  js-operators:
    - match: '[-+/*=<>!&|^~?:%]'
      scope: keyword.operator.js

  js-functions:
    - match: \b([a-zA-Z_]\w*)\s*\(
      scope: entity.name.function.js

  # Tags
  tags:
    - match: (<)({{tag_name}})
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.html
      push: tag-attributes-section

  tag-attributes-section:
    - meta_scope: meta.tag.any.html
    - match: /?>
      scope: punctuation.definition.tag.end.html
      pop: true
    - include: tag-attributes

  tag-attributes:
    - match: \b(v-[a-zA-Z][a-zA-Z0-9_:-]*)\b
      scope: entity.other.attribute-name.vue-directive.html
      push: maybe-attribute-value
    - match: '(@[a-zA-Z][a-zA-Z0-9_:-]*|:[a-zA-Z][a-zA-Z0-9_:-]*)'
      scope: entity.other.attribute-name.vue-directive.html
      push: maybe-attribute-value
    - match: \b{{attribute_name}}\b
      scope: entity.other.attribute-name.html
      push: maybe-attribute-value

  maybe-attribute-value:
    - match: '='
      scope: punctuation.separator.key-value.html
      set: attribute-value
    - match: '(?=\s|/?>)'
      pop: true

  attribute-value:
    - match: '"'
      scope: punctuation.definition.string.begin.html
      push: double-quoted-attribute
    - match: "'"
      scope: punctuation.definition.string.begin.html
      push: single-quoted-attribute
    - match: '{{space}}'
      pop: true

  double-quoted-attribute:
    - meta_scope: string.quoted.double.html
    - match: '"'
      scope: punctuation.definition.string.end.html
      pop: true
    - include: entities
    - match: '\{\{'
      push: vue-interpolation

  single-quoted-attribute:
    - meta_scope: string.quoted.single.html
    - match: "'"
      scope: punctuation.definition.string.end.html
      pop: true
    - include: entities
    - match: '\{\{'
      push: vue-interpolation

  vue-interpolation:
    - meta_scope: source.js.embedded.html
    - match: '\}\}'
      pop: true
    - include: js-source

  entities:
    - match: '&([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);'
      scope: constant.character.entity.html